[{"storage_name": "Account", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "storage_fallback": {"nonce": 0, "consumers": 0, "providers": 0, "data": {"free": 0, "reserved": 0, "miscFrozen": 0, "feeFrozen": 0}}, "documentation": " The full account information for a particular account ID.", "module_id": "System", "module_prefix": "System", "module_name": "System", "spec_version": 202, "type_key1": "AccountId", "type_key2": null, "type_hasher_key1": "Blake2_128Concat", "type_hasher_key2": null, "type_value": "AccountInfo<Index, AccountData>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "ExtrinsicCount", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Total extrinsics count for the current block.", "module_id": "System", "module_prefix": "System", "module_name": "System", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "u32", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "BlockWeight", "storage_modifier": "Default", "storage_fallback_scale": "0x000000000000000000000000000000000000000000000000", "storage_fallback": "[decoding error]", "documentation": " The current weight for the block.", "module_id": "System", "module_prefix": "System", "module_name": "System", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "ConsumedWeight", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "AllExtrinsicsLen", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Total length (in bytes) for all extrinsics put together, for the current block.", "module_id": "System", "module_prefix": "System", "module_name": "System", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "u32", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "BlockHash", "storage_modifier": "Default", "storage_fallback_scale": "0x0000000000000000000000000000000000000000000000000000000000000000", "storage_fallback": "0x0000000000000000000000000000000000000000000000000000000000000000", "documentation": " Map of block numbers to block hashes.", "module_id": "System", "module_prefix": "System", "module_name": "System", "spec_version": 202, "type_key1": "BlockNumber", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Hash", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "ExtrinsicData", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Extrinsics data for the current block (maps an extrinsic's index to its data).", "module_id": "System", "module_prefix": "System", "module_name": "System", "spec_version": 202, "type_key1": "u32", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Bytes", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "Number", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " The current block number being processed. Set by `execute_block`.", "module_id": "System", "module_prefix": "System", "module_name": "System", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "BlockNumber", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "ParentHash", "storage_modifier": "Default", "storage_fallback_scale": "0x0000000000000000000000000000000000000000000000000000000000000000", "storage_fallback": "0x0000000000000000000000000000000000000000000000000000000000000000", "documentation": " Hash of the previous block.", "module_id": "System", "module_prefix": "System", "module_name": "System", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Hash", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Digest", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Digest of the current block, also part of the block header.", "module_id": "System", "module_prefix": "System", "module_name": "System", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "DigestOf", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Events", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Events deposited for the current block.", "module_id": "System", "module_prefix": "System", "module_name": "System", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<EventRecord<Event, Hash>>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "EventCount", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " The number of events in the `Events<T>` list.", "module_id": "System", "module_prefix": "System", "module_name": "System", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "EventIndex", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "EventTopics", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Mapping between a topic (represented by T::Hash) and a vector of indexes\n of events in the `<Events<T>>` list.\n\n All topic vectors have deterministic storage locations depending on the topic. This\n allows light-clients to leverage the changes trie storage tracking mechanism and\n in case of changes fetch the list of events of interest.\n\n The value has the type `(T::BlockNumber, EventIndex)` because if we used only just\n the `EventIndex` then in case if the topic has the same contents on the next block\n no notification will be triggered thus the event might be lost.", "module_id": "System", "module_prefix": "System", "module_name": "System", "spec_version": 202, "type_key1": "Hash", "type_key2": null, "type_hasher_key1": "Blake2_128Concat", "type_hasher_key2": null, "type_value": "Vec<(BlockNumber, EventIndex)>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "LastRuntimeUpgrade", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened.", "module_id": "System", "module_prefix": "System", "module_name": "System", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "LastRuntimeUpgradeInfo", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "UpgradedToU32RefCount", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " True if we have upgraded so that `type RefCount` is `u32`. false (default) if not.", "module_id": "System", "module_prefix": "System", "module_name": "System", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "bool", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "UpgradedToDualRefCount", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " True if we have upgraded so that AccountInfo contains two types of `RefCount`. false\n (default) if not.", "module_id": "System", "module_prefix": "System", "module_name": "System", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "bool", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "ExecutionPhase", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The execution phase of the block.", "module_id": "System", "module_prefix": "System", "module_name": "System", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Phase", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "EpochIndex", "storage_modifier": "Default", "storage_fallback_scale": "0x0000000000000000", "storage_fallback": 0, "documentation": " Current epoch index.", "module_id": "Babe", "module_prefix": "Babe", "module_name": "Babe", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "u64", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Authorities", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Current epoch authorities.", "module_id": "Babe", "module_prefix": "Babe", "module_name": "Babe", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<(AuthorityId, BabeAuthorityWeight)>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "GenesisSlot", "storage_modifier": "Default", "storage_fallback_scale": "0x0000000000000000", "storage_fallback": 0, "documentation": " The slot at which the first epoch actually started. This is 0\n until the first block of the chain.", "module_id": "Babe", "module_prefix": "Babe", "module_name": "Babe", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "u64", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "CurrentSlot", "storage_modifier": "Default", "storage_fallback_scale": "0x0000000000000000", "storage_fallback": 0, "documentation": " Current slot number.", "module_id": "Babe", "module_prefix": "Babe", "module_name": "Babe", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "u64", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Randomness", "storage_modifier": "Default", "storage_fallback_scale": "0x0000000000000000000000000000000000000000000000000000000000000000", "storage_fallback": "0x0000000000000000000000000000000000000000000000000000000000000000", "documentation": " The epoch randomness for the *current* epoch.\n\n # Security\n\n This MUST NOT be used for gambling, as it can be influenced by a\n malicious validator in the short term. It MAY be used in many\n cryptographic protocols, however, so long as one remembers that this\n (like everything else on-chain) it is public. For example, it can be\n used where a number is needed that cannot have been chosen by an\n adversary, for purposes such as public-coin zero-knowledge proofs.", "module_id": "Babe", "module_prefix": "Babe", "module_name": "Babe", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "schnorrkel::Randomness", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "NextEpochConfig", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Next epoch configuration, if changed.", "module_id": "Babe", "module_prefix": "Babe", "module_name": "Babe", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "NextConfigDescriptor", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "NextRandomness", "storage_modifier": "Default", "storage_fallback_scale": "0x0000000000000000000000000000000000000000000000000000000000000000", "storage_fallback": "0x0000000000000000000000000000000000000000000000000000000000000000", "documentation": " Next epoch randomness.", "module_id": "Babe", "module_prefix": "Babe", "module_name": "Babe", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "schnorrkel::Randomness", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "NextAuthorities", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Next epoch authorities.", "module_id": "Babe", "module_prefix": "Babe", "module_name": "Babe", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<(AuthorityId, BabeAuthorityWeight)>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "SegmentIndex", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " Randomness under construction.\n\n We make a tradeoff between storage accesses and list length.\n We store the under-construction randomness in segments of up to\n `UNDER_CONSTRUCTION_SEGMENT_LENGTH`.\n\n Once a segment reaches this length, we begin the next one.\n We reset all segments and return to `0` at the beginning of every\n epoch.", "module_id": "Babe", "module_prefix": "Babe", "module_name": "Babe", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "u32", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "UnderConstruction", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " TWOX-NOTE: `SegmentIndex` is an increasing integer, so this is okay.", "module_id": "Babe", "module_prefix": "Babe", "module_name": "Babe", "spec_version": 202, "type_key1": "u32", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Vec<schnorrkel::Randomness>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "Initialized", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Temporary value (cleared at block finalization) which is `Some`\n if per-block initialization has already been called for current block.", "module_id": "Babe", "module_prefix": "Babe", "module_name": "Babe", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "MaybeRandomness", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "AuthorVrfRandomness", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Temporary value (cleared at block finalization) that includes the VRF output generated\n at this block. This field should always be populated during block processing unless\n secondary plain slots are enabled (which don't contain a VRF output).", "module_id": "Babe", "module_prefix": "Babe", "module_name": "Babe", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "MaybeRandomness", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Lateness", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " How late the current block is compared to its parent.\n\n This entry is populated as part of block execution and is cleaned up\n on block finalization. Querying this storage entry outside of block\n execution context should always yield zero.", "module_id": "Babe", "module_prefix": "Babe", "module_name": "Babe", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "BlockNumber", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Now", "storage_modifier": "Default", "storage_fallback_scale": "0x0000000000000000", "storage_fallback": 0, "documentation": " Current time for the current block.", "module_id": "Timestamp", "module_prefix": "Timestamp", "module_name": "Timestamp", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Moment", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "DidUpdate", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Did the timestamp get updated in this block?", "module_id": "Timestamp", "module_prefix": "Timestamp", "module_name": "Timestamp", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "bool", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Accounts", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The lookup from index to account.", "module_id": "Indices", "module_prefix": "Indices", "module_name": "Indices", "spec_version": 202, "type_key1": "AccountIndex", "type_key2": null, "type_hasher_key1": "Blake2_128Concat", "type_hasher_key2": null, "type_value": "(AccountId, BalanceOf, bool)", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "TotalIssuance", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000000000000000000000000000", "storage_fallback": 0, "documentation": " The total units issued in the system.", "module_id": "Balances", "module_prefix": "Balances", "module_name": "Balances", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Balance", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Account", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "storage_fallback": {"free": 0, "reserved": 0, "miscFrozen": 0, "feeFrozen": 0}, "documentation": " The balance of an account.\n\n NOTE: This is only used in the case that this module is used to store balances.", "module_id": "Balances", "module_prefix": "Balances", "module_name": "Balances", "spec_version": 202, "type_key1": "AccountId", "type_key2": null, "type_hasher_key1": "Blake2_128Concat", "type_hasher_key2": null, "type_value": "AccountData<Balance>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "Locks", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Any liquidity locks on some account balances.\n NOTE: Should only be accessed when setting, changing and freeing a lock.", "module_id": "Balances", "module_prefix": "Balances", "module_name": "Balances", "spec_version": 202, "type_key1": "AccountId", "type_key2": null, "type_hasher_key1": "Blake2_128Concat", "type_hasher_key2": null, "type_value": "Vec<BalanceLock<Balance>>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "StorageVersion", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Storage version of the pallet.\n\n This is set to v2.0.0 for new networks.", "module_id": "Balances", "module_prefix": "Balances", "module_name": "Balances", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Releases", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "NextFeeMultiplier", "storage_modifier": "Default", "storage_fallback_scale": "0x000064a7b3b6e00d0000000000000000", "storage_fallback": 1000000000000000000, "documentation": "", "module_id": "TransactionPayment", "module_prefix": "TransactionPayment", "module_name": "TransactionPayment", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Multiplier", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "StorageVersion", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": "", "module_id": "TransactionPayment", "module_prefix": "TransactionPayment", "module_name": "TransactionPayment", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Releases", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Uncles", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Uncles", "module_id": "Authorship", "module_prefix": "Authorship", "module_name": "Authorship", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<UncleEntryItem<BlockNumber, Hash, AccountId>>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Author", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Author of current block.", "module_id": "Authorship", "module_prefix": "Authorship", "module_name": "Authorship", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "AccountId", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "DidSetUncles", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Whether uncles were already set in this block.", "module_id": "Authorship", "module_prefix": "Authorship", "module_name": "Authorship", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "bool", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Reports", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The primary structure that holds all offence records keyed by report identifiers.", "module_id": "Offences", "module_prefix": "Offences", "module_name": "Offences", "spec_version": 202, "type_key1": "ReportIdOf", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "OffenceDetails<AccountId, IdentificationTuple>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "DeferredOffences", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Deferred reports that have been rejected by the offence handler and need to be submitted\n at a later time.", "module_id": "Offences", "module_prefix": "Offences", "module_name": "Offences", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<DeferredOffenceOf>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "ConcurrentReportsIndex", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " A vector of reports of the same kind that happened at the same time slot.", "module_id": "Offences", "module_prefix": "Offences", "module_name": "Offences", "spec_version": 202, "type_key1": "Kind", "type_key2": "OpaqueTimeSlot", "type_hasher_key1": "Twox64Concat", "type_hasher_key2": "Twox64Concat", "type_value": "Vec<ReportIdOf>", "type_is_linked": null, "type_class": "DoubleMapType"}, {"storage_name": "ReportsByKindIndex", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Enumerates all reports of a kind along with the time they happened.\n\n All reports are sorted by the time of offence.\n\n Note that the actual type of this mapping is `Vec<u8>`, this is because values of\n different types are not supported at the moment so we are doing the manual serialization.", "module_id": "Offences", "module_prefix": "Offences", "module_name": "Offences", "spec_version": 202, "type_key1": "Kind", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Bytes", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "Validators", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The current set of validators.", "module_id": "Session", "module_prefix": "Session", "module_name": "Session", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<ValidatorId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "CurrentIndex", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " Current index of the session.", "module_id": "Session", "module_prefix": "Session", "module_name": "Session", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "SessionIndex", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "QueuedChanged", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " True if the underlying economic identities or weighting behind the validators\n has changed in the queued validator set.", "module_id": "Session", "module_prefix": "Session", "module_name": "Session", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "bool", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "QueuedKeys", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The queued keys for the next session. When the next session begins, these keys\n will be used to determine the validator's session keys.", "module_id": "Session", "module_prefix": "Session", "module_name": "Session", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<(ValidatorId, Keys)>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "DisabledValidators", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Indices of disabled validators.\n\n The set is cleared when `on_session_ending` returns a new set of identities.", "module_id": "Session", "module_prefix": "Session", "module_name": "Session", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<u32>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "NextKeys", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The next session keys for a validator.", "module_id": "Session", "module_prefix": "Session", "module_name": "Session", "spec_version": 202, "type_key1": "ValidatorId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Keys", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "KeyOwner", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The owner of a key. The key is the `KeyTypeId` + the encoded key.", "module_id": "Session", "module_prefix": "Session", "module_name": "Session", "spec_version": 202, "type_key1": "(KeyTypeId, Vec<u8>)", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "ValidatorId", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "State", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " State of the current authority set.", "module_id": "Grandpa", "module_prefix": "GrandpaFinality", "module_name": "Grandpa", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "StoredState<BlockNumber>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "PendingChange", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Pending change: (signaled at, scheduled change).", "module_id": "Grandpa", "module_prefix": "GrandpaFinality", "module_name": "Grandpa", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "StoredPendingChange<BlockNumber>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "NextForced", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " next block number where we can force a change.", "module_id": "Grandpa", "module_prefix": "GrandpaFinality", "module_name": "Grandpa", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "BlockNumber", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Stalled", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " `true` if we are currently stalled.", "module_id": "Grandpa", "module_prefix": "GrandpaFinality", "module_name": "Grandpa", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "(BlockNumber, BlockNumber)", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "CurrentSetId", "storage_modifier": "Default", "storage_fallback_scale": "0x0000000000000000", "storage_fallback": 0, "documentation": " The number of changes (both in terms of keys and underlying economic responsibilities)\n in the 'set' of Grandpa validators from genesis.", "module_id": "Grandpa", "module_prefix": "GrandpaFinality", "module_name": "Grandpa", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "SetId", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "SetIdSession", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " A mapping from grandpa set ID to the index of the *most recent* session for which its\n members were responsible.\n\n TWOX-NOTE: `SetId` is not under user control.", "module_id": "Grandpa", "module_prefix": "GrandpaFinality", "module_name": "Grandpa", "spec_version": 202, "type_key1": "SetId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "SessionIndex", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "HeartbeatAfter", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " The block number after which it's ok to send heartbeats in current session.\n\n At the beginning of each session we set this to a value that should\n fall roughly in the middle of the session duration.\n The idea is to first wait for the validators to produce a block\n in the current session, so that the heartbeat later on will not be necessary.", "module_id": "ImOnline", "module_prefix": "ImOnline", "module_name": "ImOnline", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "BlockNumber", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Keys", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The current set of keys that may issue a heartbeat.", "module_id": "ImOnline", "module_prefix": "ImOnline", "module_name": "ImOnline", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<AuthorityId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "ReceivedHeartbeats", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " For each session index, we keep a mapping of `AuthIndex` to\n `offchain::OpaqueNetworkState`.", "module_id": "ImOnline", "module_prefix": "ImOnline", "module_name": "ImOnline", "spec_version": 202, "type_key1": "SessionIndex", "type_key2": "AuthIndex", "type_hasher_key1": "Twox64Concat", "type_hasher_key2": "Twox64Concat", "type_value": "Bytes", "type_is_linked": null, "type_class": "DoubleMapType"}, {"storage_name": "AuthoredBlocks", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " For each session index, we keep a mapping of `T::ValidatorId` to the\n number of blocks authored by the given authority.", "module_id": "ImOnline", "module_prefix": "ImOnline", "module_name": "ImOnline", "spec_version": 202, "type_key1": "SessionIndex", "type_key2": "ValidatorId", "type_hasher_key1": "Twox64Concat", "type_hasher_key2": "Twox64Concat", "type_value": "u32", "type_is_linked": null, "type_class": "DoubleMapType"}, {"storage_name": "ActiveConfig", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000001000000010000000000000000000000000100000000000000000000000000000000000000", "storage_fallback": {"maxCodeSize": 0, "maxHeadDataSize": 0, "maxUpwardQueueCount": 0, "maxUpwardQueueSize": 0, "maxUpwardMessageSize": 0, "maxUpwardMessageNumPerCandidate": 0, "hrmpMaxMessageNumPerCandidate": 0, "validationUpgradeFrequency": 0, "validationUpgradeDelay": 0, "maxPovSize": 0, "maxDownwardMessageSize": 0, "preferredDispatchableUpwardMessagesStepWeight": 0, "hrmpMaxParachainOutboundChannels": 0, "hrmpMaxParathreadOutboundChannels": 0, "hrmpOpenRequestTtl": 0, "hrmpSenderDeposit": 0, "hrmpRecipientDeposit": 0, "hrmpChannelMaxCapacity": 0, "hrmpChannelMaxTotalSize": 0, "hrmpMaxParachainInboundChannels": 0, "hrmpMaxParathreadInboundChannels": 0, "hrmpChannelMaxMessageSize": 0, "acceptancePeriod": 0, "parathreadCores": 0, "parathreadRetries": 0, "groupRotationFrequency": 1, "chainAvailabilityPeriod": 1, "threadAvailabilityPeriod": 1, "schedulingLookahead": 0, "maxValidatorsPerCore": null, "disputePeriod": 0, "noShowSlots": 1, "nDelayTranches": 0, "zerothDelayTrancheWidth": 0, "neededApprovals": 0, "relayVrfModuloSamples": 0}, "documentation": " The active configuration for the current session.", "module_id": "ParachainsConfiguration", "module_prefix": "Configuration", "module_name": "ParachainsConfiguration", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "HostConfiguration<BlockNumber>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "PendingConfig", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Pending configuration (if any) for the next session.", "module_id": "ParachainsConfiguration", "module_prefix": "Configuration", "module_name": "ParachainsConfiguration", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "HostConfiguration<BlockNumber>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "AvailabilityBitfields", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The latest bitfield for each validator, referred to by their index in the validator set.", "module_id": "Inclusion", "module_prefix": "ParaInclusion", "module_name": "Inclusion", "spec_version": 202, "type_key1": "ValidatorIndex", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "AvailabilityBitfieldRecord<BlockNumber>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "PendingAvailability", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Candidates pending availability by `ParaId`.", "module_id": "Inclusion", "module_prefix": "ParaInclusion", "module_name": "Inclusion", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "CandidatePendingAvailability<Hash, BlockNumber>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "PendingAvailabilityCommitments", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The commitments of candidates pending availability, by ParaId.", "module_id": "Inclusion", "module_prefix": "ParaInclusion", "module_name": "Inclusion", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "CandidateCommitments", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "Validators", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The current validators, by their parachain session keys.", "module_id": "Inclusion", "module_prefix": "ParaInclusion", "module_name": "Inclusion", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<ValidatorId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "CurrentSessionIndex", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " The current session index.", "module_id": "Inclusion", "module_prefix": "ParaInclusion", "module_name": "Inclusion", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "SessionIndex", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Included", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Whether the inclusion inherent was included within this block.\n\n The `Option<()>` is effectively a bool, but it never hits storage in the `null` variant\n due to the guarantees of FRAME's storage APIs.\n\n If this is `null` at the end of the block, we panic and render the block invalid.", "module_id": "InclusionInherent", "module_prefix": "ParaInclusionInherent", "module_name": "InclusionInherent", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Null", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Agenda", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Items to be executed, indexed by the block number that they should be executed on.", "module_id": "Scheduler", "module_prefix": "Scheduler", "module_name": "Scheduler", "spec_version": 202, "type_key1": "BlockNumber", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Vec<Option<Scheduled<Call, BlockNumber, PalletsOrigin, AccountId>>>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "Lookup", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Lookup from identity to the block number and index of the task.", "module_id": "Scheduler", "module_prefix": "Scheduler", "module_name": "Scheduler", "spec_version": 202, "type_key1": "Bytes", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "TaskAddress<BlockNumber>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "StorageVersion", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Storage version of the pallet.\n\n New networks start with last version.", "module_id": "Scheduler", "module_prefix": "Scheduler", "module_name": "Scheduler", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Releases", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Parachains", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " All parachains. Ordered ascending by ParaId. Parathreads are not included.", "module_id": "Paras", "module_prefix": "Paras", "module_name": "Paras", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<ParaId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Parathreads", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " All parathreads.", "module_id": "Paras", "module_prefix": "Paras", "module_name": "Paras", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Null", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "Heads", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The head-data of every registered para.", "module_id": "Paras", "module_prefix": "Paras", "module_name": "Paras", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "HeadData", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "CurrentCode", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The validation code of every live para.", "module_id": "Paras", "module_prefix": "Paras", "module_name": "Paras", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "ValidationCode", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "PastCode", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Actual past code, indicated by the para id as well as the block number at which it became outdated.", "module_id": "Paras", "module_prefix": "Paras", "module_name": "Paras", "spec_version": 202, "type_key1": "(ParaId, BlockNumber)", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "ValidationCode", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "PastCodeMeta", "storage_modifier": "Default", "storage_fallback_scale": "0x0000", "storage_fallback": {"upgradeTimes": [], "lastPruned": null}, "documentation": " Past code of parachains. The parachains themselves may not be registered anymore,\n but we also keep their code on-chain for the same amount of time as outdated code\n to keep it available for secondary checkers.", "module_id": "Paras", "module_prefix": "Paras", "module_name": "Paras", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "ParaPastCodeMeta<BlockNumber>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "PastCodePruning", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Which paras have past code that needs pruning and the relay-chain block at which the code was replaced.\n Note that this is the actual height of the included block, not the expected height at which the\n code upgrade would be applied, although they may be equal.\n This is to ensure the entire acceptance period is covered, not an offset acceptance period starting\n from the time at which the parachain perceives a code upgrade as having occurred.\n Multiple entries for a single para are permitted. Ordered ascending by block number.", "module_id": "Paras", "module_prefix": "Paras", "module_name": "Paras", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<(ParaId, BlockNumber)>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "FutureCodeUpgrades", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The block number at which the planned code change is expected for a para.\n The change will be applied after the first parablock for this ID included which executes\n in the context of a relay chain block with a number >= `expected_at`.", "module_id": "Paras", "module_prefix": "Paras", "module_name": "Paras", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "BlockNumber", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "FutureCode", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The actual future code of a para.", "module_id": "Paras", "module_prefix": "Paras", "module_name": "Paras", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "ValidationCode", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "UpcomingParas", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Upcoming paras (chains and threads). These are only updated on session change. Corresponds to an\n entry in the upcoming-genesis map.", "module_id": "Paras", "module_prefix": "Paras", "module_name": "Paras", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<ParaId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "UpcomingParasGenesis", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Upcoming paras instantiation arguments.", "module_id": "Paras", "module_prefix": "Paras", "module_name": "Paras", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "ParaGenesisArgs", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "OutgoingParas", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Paras that are to be cleaned up at the end of the session.", "module_id": "Paras", "module_prefix": "Paras", "module_name": "Paras", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<ParaId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "HasInitialized", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Whether the parachains modules have been initialized within this block.\n\n Semantically a bool, but this guarantees it should never hit the trie,\n as this is cleared in `on_finalize` and Frame optimizes `null` values to be empty values.\n\n As a bool, `set(false)` and `remove()` both lead to the next `get()` being false, but one of\n them writes to the trie and one does not. This confusion makes `Option<()>` more suitable for\n the semantics of this variable.", "module_id": "Initializer", "module_prefix": "Initializer", "module_name": "Initializer", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Null", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "BufferedSessionChanges", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Buffered session changes along with the block number at which they should be applied.\n\n Typically this will be empty or one element long. Apart from that this item never hits\n the storage.\n\n However this is a `Vec` regardless to handle various edge cases that may occur at runtime\n upgrade boundaries or if governance intervenes.", "module_id": "Initializer", "module_prefix": "Initializer", "module_name": "Initializer", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<BufferedSessionChange>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "OutgoingParas", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Paras that are to be cleaned up at the end of the session.\n The entries are sorted ascending by the para id.", "module_id": "Dmp", "module_prefix": "Dmp", "module_name": "Dmp", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<ParaId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "DownwardMessageQueues", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The downward messages addressed for a certain para.", "module_id": "Dmp", "module_prefix": "Dmp", "module_name": "Dmp", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Vec<InboundDownwardMessage<BlockNumber>>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "DownwardMessageQueueHeads", "storage_modifier": "Default", "storage_fallback_scale": "0x0000000000000000000000000000000000000000000000000000000000000000", "storage_fallback": "0x0000000000000000000000000000000000000000000000000000000000000000", "documentation": " A mapping that stores the downward message queue MQC head for each para.\n\n Each link in this chain has a form:\n `(prev_head, B, H(M))`, where\n - `prev_head`: is the previous head hash or zero if null.\n - `B`: is the relay-chain block number in which a message was appended.\n - `H(M)`: is the hash of the message being appended.", "module_id": "Dmp", "module_prefix": "Dmp", "module_name": "Dmp", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Hash", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "OutgoingParas", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Paras that are to be cleaned up at the end of the session.\n The entries are sorted ascending by the para id.", "module_id": "Ump", "module_prefix": "Ump", "module_name": "Ump", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<ParaId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "RelayDispatchQueues", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The messages waiting to be handled by the relay-chain originating from a certain parachain.\n\n Note that some upward messages might have been already processed by the inclusion logic. E.g.\n channel management messages.\n\n The messages are processed in FIFO order.", "module_id": "Ump", "module_prefix": "Ump", "module_name": "Ump", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "VecDeque<UpwardMessage>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "RelayDispatchQueueSize", "storage_modifier": "Default", "storage_fallback_scale": "0x0000000000000000", "storage_fallback": {"col1": 0, "col2": 0}, "documentation": " Size of the dispatch queues. Caches sizes of the queues in `RelayDispatchQueue`.\n\n First item in the tuple is the count of messages and second\n is the total length (in bytes) of the message payloads.\n\n Note that this is an auxilary mapping: it's possible to tell the byte size and the number of\n messages only looking at `RelayDispatchQueues`. This mapping is separate to avoid the cost of\n loading the whole message queue if only the total size and count are required.\n\n Invariant:\n - The set of keys should exactly match the set of keys of `RelayDispatchQueues`.", "module_id": "Ump", "module_prefix": "Ump", "module_name": "Ump", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "(u32, u32)", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "NeedsDispatch", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The ordered list of `ParaId`s that have a `RelayDispatchQueue` entry.\n\n Invariant:\n - The set of items from this vector should be exactly the set of the keys in\n   `RelayDispatchQueues` and `RelayDispatchQueueSize`.", "module_id": "Ump", "module_prefix": "Ump", "module_name": "Ump", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<ParaId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "NextDispatchRoundStartWith", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " This is the para that gets will get dispatched first during the next upward dispatchable queue\n execution round.\n\n Invariant:\n - If `Some(para)`, then `para` must be present in `NeedsDispatch`.", "module_id": "Ump", "module_prefix": "Ump", "module_name": "Ump", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "ParaId", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "OutgoingParas", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Paras that are to be cleaned up at the end of the session.\n The entries are sorted ascending by the para id.", "module_id": "Hrmp", "module_prefix": "Hrmp", "module_name": "Hrmp", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<ParaId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "HrmpOpenChannelRequests", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The set of pending HRMP open channel requests.\n\n The set is accompanied by a list for iteration.\n\n Invariant:\n - There are no channels that exists in list but not in the set and vice versa.", "module_id": "Hrmp", "module_prefix": "Hrmp", "module_name": "Hrmp", "spec_version": 202, "type_key1": "HrmpChannelId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "HrmpOpenChannelRequest", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "HrmpOpenChannelRequestsList", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": "", "module_id": "Hrmp", "module_prefix": "Hrmp", "module_name": "Hrmp", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<HrmpChannelId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "HrmpOpenChannelRequestCount", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " This mapping tracks how many open channel requests are inititated by a given sender para.\n Invariant: `HrmpOpenChannelRequests` should contain the same number of items that has `(X, _)`\n as the number of `HrmpOpenChannelRequestCount` for `X`.", "module_id": "Hrmp", "module_prefix": "Hrmp", "module_name": "Hrmp", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "u32", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "HrmpAcceptedChannelRequestCount", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " This mapping tracks how many open channel requests were accepted by a given recipient para.\n Invariant: `HrmpOpenChannelRequests` should contain the same number of items `(_, X)` with\n `confirmed` set to true, as the number of `HrmpAcceptedChannelRequestCount` for `X`.", "module_id": "Hrmp", "module_prefix": "Hrmp", "module_name": "Hrmp", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "u32", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "HrmpCloseChannelRequests", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " A set of pending HRMP close channel requests that are going to be closed during the session change.\n Used for checking if a given channel is registered for closure.\n\n The set is accompanied by a list for iteration.\n\n Invariant:\n - There are no channels that exists in list but not in the set and vice versa.", "module_id": "Hrmp", "module_prefix": "Hrmp", "module_name": "Hrmp", "spec_version": 202, "type_key1": "HrmpChannelId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Null", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "HrmpCloseChannelRequestsList", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": "", "module_id": "Hrmp", "module_prefix": "Hrmp", "module_name": "Hrmp", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<HrmpChannelId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "HrmpWatermarks", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The HRMP watermark associated with each para.\n Invariant:\n - each para `P` used here as a key should satisfy `Paras::is_valid_para(P)` within a session.", "module_id": "Hrmp", "module_prefix": "Hrmp", "module_name": "Hrmp", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "BlockNumber", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "HrmpChannels", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " HRMP channel data associated with each para.\n Invariant:\n - each participant in the channel should satisfy `Paras::is_valid_para(P)` within a session.", "module_id": "Hrmp", "module_prefix": "Hrmp", "module_name": "Hrmp", "spec_version": 202, "type_key1": "HrmpChannelId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "HrmpChannel", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "HrmpIngressChannelsIndex", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Ingress/egress indexes allow to find all the senders and receivers given the opposite\n side. I.e.\n\n (a) ingress index allows to find all the senders for a given recipient.\n (b) egress index allows to find all the recipients for a given sender.\n\n Invariants:\n - for each ingress index entry for `P` each item `I` in the index should present in `HrmpChannels`\n   as `(I, P)`.\n - for each egress index entry for `P` each item `E` in the index should present in `HrmpChannels`\n   as `(P, E)`.\n - there should be no other dangling channels in `HrmpChannels`.\n - the vectors are sorted.", "module_id": "Hrmp", "module_prefix": "Hrmp", "module_name": "Hrmp", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Vec<ParaId>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "HrmpEgressChannelsIndex", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": "", "module_id": "Hrmp", "module_prefix": "Hrmp", "module_name": "Hrmp", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Vec<ParaId>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "HrmpChannelContents", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Storage for the messages for each channel.\n Invariant: cannot be non-empty if the corresponding channel in `HrmpChannels` is `null`.", "module_id": "Hrmp", "module_prefix": "Hrmp", "module_name": "Hrmp", "spec_version": 202, "type_key1": "HrmpChannelId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Vec<InboundHrmpMessage<BlockNumber>>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "HrmpChannelDigests", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Maintains a mapping that can be used to answer the question:\n What paras sent a message at the given block number for a given reciever.\n Invariants:\n - The inner `Vec<ParaId>` is never empty.\n - The inner `Vec<ParaId>` cannot store two same `ParaId`.\n - The outer vector is sorted ascending by block number and cannot store two items with the same\n   block number.", "module_id": "Hrmp", "module_prefix": "Hrmp", "module_name": "Hrmp", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Vec<(BlockNumber, Vec<ParaId>)>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "AssignmentKeysUnsafe", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Assignment keys for the current session.\n Note that this API is private due to it being prone to 'off-by-one' at session boundaries.\n When in doubt, use `Sessions` API instead.", "module_id": "SessionInfo", "module_prefix": "ParaSessionInfo", "module_name": "SessionInfo", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<AssignmentId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "EarliestStoredSession", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " The earliest session for which previous session info is stored.", "module_id": "SessionInfo", "module_prefix": "ParaSessionInfo", "module_name": "SessionInfo", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "SessionIndex", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Sessions", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Session information in a rolling window.\n Should have an entry in range `EarliestStoredSession..=CurrentSessionIndex`.\n Does not have any entries before the session index in the first session change notification.", "module_id": "SessionInfo", "module_prefix": "ParaSessionInfo", "module_name": "SessionInfo", "spec_version": 202, "type_key1": "SessionIndex", "type_key2": null, "type_hasher_key1": "Identity", "type_hasher_key2": null, "type_value": "SessionInfo", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "ParathreadsRegistrationEnabled", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Whether parathreads are enabled or not.", "module_id": "Registrar", "module_prefix": "Registrar", "module_name": "Registrar", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "bool", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "PendingSwap", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Pending swap operations.", "module_id": "Registrar", "module_prefix": "Registrar", "module_name": "Registrar", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "ParaId", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "Paras", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Map of all registered parathreads/chains.", "module_id": "Registrar", "module_prefix": "Registrar", "module_name": "Registrar", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "bool", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "Debtors", "storage_modifier": "Default", "storage_fallback_scale": "0x0000000000000000000000000000000000000000000000000000000000000000", "storage_fallback": "0x0000000000000000000000000000000000000000000000000000000000000000", "documentation": " Users who have paid a parathread's deposit.", "module_id": "Registrar", "module_prefix": "Registrar", "module_name": "Registrar", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "AccountId", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "ProposalCount", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " Number of proposals that have been made.", "module_id": "Treasury", "module_prefix": "Treasury", "module_name": "Treasury", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "ProposalIndex", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Proposals", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Proposals that have been made.", "module_id": "Treasury", "module_prefix": "Treasury", "module_name": "Treasury", "spec_version": 202, "type_key1": "ProposalIndex", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Proposal<AccountId, BalanceOf<T, I>>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "Approvals", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Proposal indices that have been approved but not yet awarded.", "module_id": "Treasury", "module_prefix": "Treasury", "module_name": "Treasury", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<ProposalIndex>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "BountyCount", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " Number of bounty proposals that have been made.", "module_id": "Bounties", "module_prefix": "Treasury", "module_name": "Bounties", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "BountyIndex", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Bounties", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Bounties that have been made.", "module_id": "Bounties", "module_prefix": "Treasury", "module_name": "Bounties", "spec_version": 202, "type_key1": "BountyIndex", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Bounty<AccountId, BalanceOf, BlockNumber>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "BountyDescriptions", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The description of each bounty.", "module_id": "Bounties", "module_prefix": "Treasury", "module_name": "Bounties", "spec_version": 202, "type_key1": "BountyIndex", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Bytes", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "BountyApprovals", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Bounty indices that have been approved but not yet funded.", "module_id": "Bounties", "module_prefix": "Treasury", "module_name": "Bounties", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<BountyIndex>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Key", "storage_modifier": "Default", "storage_fallback_scale": "0x0000000000000000000000000000000000000000000000000000000000000000", "storage_fallback": "0x0000000000000000000000000000000000000000000000000000000000000000", "documentation": " The `AccountId` of the sudo key.", "module_id": "Sudo", "module_prefix": "Sudo", "module_name": "Sudo", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "AccountId", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "PublicPropCount", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " The number of (public) proposals that have been made so far.", "module_id": "Democracy", "module_prefix": "Democracy", "module_name": "Democracy", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "PropIndex", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "PublicProps", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The public proposals. Unsorted. The second item is the proposal's hash.", "module_id": "Democracy", "module_prefix": "Democracy", "module_name": "Democracy", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<(PropIndex, Hash, AccountId)>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "DepositOf", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Those who have locked a deposit.\n\n TWOX-NOTE: Safe, as increasing integer keys are safe.", "module_id": "Democracy", "module_prefix": "Democracy", "module_name": "Democracy", "spec_version": 202, "type_key1": "PropIndex", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "(Vec<AccountId>, BalanceOf)", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "Preimages", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Map of hashes to the proposal preimage, along with who registered it and their deposit.\n The block number is the block at which it was deposited.", "module_id": "Democracy", "module_prefix": "Democracy", "module_name": "Democracy", "spec_version": 202, "type_key1": "Hash", "type_key2": null, "type_hasher_key1": "Identity", "type_hasher_key2": null, "type_value": "PreimageStatus<AccountId, BalanceOf, BlockNumber>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "ReferendumCount", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " The next free referendum index, aka the number of referenda started so far.", "module_id": "Democracy", "module_prefix": "Democracy", "module_name": "Democracy", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "ReferendumIndex", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "LowestUnbaked", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " The lowest referendum index representing an unbaked referendum. Equal to\n `ReferendumCount` if there isn't a unbaked referendum.", "module_id": "Democracy", "module_prefix": "Democracy", "module_name": "Democracy", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "ReferendumIndex", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "ReferendumInfoOf", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Information concerning any given referendum.\n\n TWOX-NOTE: SAFE as indexes are not under an attacker’s control.", "module_id": "Democracy", "module_prefix": "Democracy", "module_name": "Democracy", "spec_version": 202, "type_key1": "ReferendumIndex", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "ReferendumInfo<BlockNumber, Hash, BalanceOf>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "VotingOf", "storage_modifier": "Default", "storage_fallback_scale": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "storage_fallback": {"Direct": {"votes": [], "delegations": {"votes": 0, "capital": 0}, "prior": {"blockNumber": 0, "balance": 0}}}, "documentation": " All votes for a particular voter. We store the balance for the number of votes that we\n have recorded. The second item is the total amount of delegations, that will be added.\n\n TWOX-NOTE: SAFE as `AccountId`s are crypto hashes anyway.", "module_id": "Democracy", "module_prefix": "Democracy", "module_name": "Democracy", "spec_version": 202, "type_key1": "AccountId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Voting<BalanceOf, AccountId, BlockNumber>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "Locks", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Accounts for which there are locks in action which may be removed at some point in the\n future. The value is the block number at which the lock expires and may be removed.\n\n TWOX-NOTE: OK ― `AccountId` is a secure hash.", "module_id": "Democracy", "module_prefix": "Democracy", "module_name": "Democracy", "spec_version": 202, "type_key1": "AccountId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "BlockNumber", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "LastTabledWasExternal", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " True if the last referendum tabled was submitted externally. false if it was a public\n proposal.", "module_id": "Democracy", "module_prefix": "Democracy", "module_name": "Democracy", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "bool", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "NextExternal", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The referendum to be tabled whenever it would be valid to table an external proposal.\n This happens when a referendum needs to be tabled and one of two conditions are met:\n - `LastTabledWasExternal` is `false`; or\n - `PublicProps` is empty.", "module_id": "Democracy", "module_prefix": "Democracy", "module_name": "Democracy", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "(Hash, VoteThreshold)", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Blacklist", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " A record of who vetoed what. Maps proposal hash to a possible existent block number\n (until when it may not be resubmitted) and who vetoed it.", "module_id": "Democracy", "module_prefix": "Democracy", "module_name": "Democracy", "spec_version": 202, "type_key1": "Hash", "type_key2": null, "type_hasher_key1": "Identity", "type_hasher_key2": null, "type_value": "(BlockNumber, Vec<AccountId>)", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "Cancellations", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Record of all proposals that have been subject to emergency cancellation.", "module_id": "Democracy", "module_prefix": "Democracy", "module_name": "Democracy", "spec_version": 202, "type_key1": "Hash", "type_key2": null, "type_hasher_key1": "Identity", "type_hasher_key2": null, "type_value": "bool", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "StorageVersion", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Storage version of the pallet.\n\n New networks start with last version.", "module_id": "Democracy", "module_prefix": "Democracy", "module_name": "Democracy", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Releases", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Proposals", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The hashes of the active proposals.", "module_id": "Council", "module_prefix": "Instance1Collective", "module_name": "Council", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<Hash>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "ProposalOf", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Actual proposal for a given hash, if it's current.", "module_id": "Council", "module_prefix": "Instance1Collective", "module_name": "Council", "spec_version": 202, "type_key1": "Hash", "type_key2": null, "type_hasher_key1": "Identity", "type_hasher_key2": null, "type_value": "Proposal", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "Voting", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Votes on a given proposal, if it is ongoing.", "module_id": "Council", "module_prefix": "Instance1Collective", "module_name": "Council", "spec_version": 202, "type_key1": "Hash", "type_key2": null, "type_hasher_key1": "Identity", "type_hasher_key2": null, "type_value": "Votes<AccountId, BlockNumber>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "ProposalCount", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " Proposals so far.", "module_id": "Council", "module_prefix": "Instance1Collective", "module_name": "Council", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "u32", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Members", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The current members of the collective. This is stored sorted (just by value).", "module_id": "Council", "module_prefix": "Instance1Collective", "module_name": "Council", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<AccountId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Prime", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The prime member that helps determine the default vote behavior in case of absentations.", "module_id": "Council", "module_prefix": "Instance1Collective", "module_name": "Council", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "AccountId", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Proposals", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The hashes of the active proposals.", "module_id": "TechnicalCommittee", "module_prefix": "Instance2Collective", "module_name": "TechnicalCommittee", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<Hash>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "ProposalOf", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Actual proposal for a given hash, if it's current.", "module_id": "TechnicalCommittee", "module_prefix": "Instance2Collective", "module_name": "TechnicalCommittee", "spec_version": 202, "type_key1": "Hash", "type_key2": null, "type_hasher_key1": "Identity", "type_hasher_key2": null, "type_value": "Proposal", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "Voting", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Votes on a given proposal, if it is ongoing.", "module_id": "TechnicalCommittee", "module_prefix": "Instance2Collective", "module_name": "TechnicalCommittee", "spec_version": 202, "type_key1": "Hash", "type_key2": null, "type_hasher_key1": "Identity", "type_hasher_key2": null, "type_value": "Votes<AccountId, BlockNumber>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "ProposalCount", "storage_modifier": "Default", "storage_fallback_scale": "0x00000000", "storage_fallback": 0, "documentation": " Proposals so far.", "module_id": "TechnicalCommittee", "module_prefix": "Instance2Collective", "module_name": "TechnicalCommittee", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "u32", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Members", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The current members of the collective. This is stored sorted (just by value).", "module_id": "TechnicalCommittee", "module_prefix": "Instance2Collective", "module_name": "TechnicalCommittee", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<AccountId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Prime", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The prime member that helps determine the default vote behavior in case of absentations.", "module_id": "TechnicalCommittee", "module_prefix": "Instance2Collective", "module_name": "TechnicalCommittee", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "AccountId", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "Proposals", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " All the proposals.", "module_id": "ProposeParachain", "module_prefix": "ParachainProposer", "module_name": "ProposeParachain", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Proposal<AccountId, ValidatorId, BalanceOf>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "ParachainValidationCode", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " The validation WASM code of the parachain.", "module_id": "ProposeParachain", "module_prefix": "ParachainProposer", "module_name": "ProposeParachain", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "ValidationCode", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "ApprovedProposals", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Proposals that are approved.", "module_id": "ProposeParachain", "module_prefix": "ParachainProposer", "module_name": "ProposeParachain", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<ParaId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "ScheduledProposals", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Proposals that are scheduled at for a fixed session to be applied.", "module_id": "ProposeParachain", "module_prefix": "ParachainProposer", "module_name": "ProposeParachain", "spec_version": 202, "type_key1": "SessionIndex", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "Vec<ParaId>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "ParachainInfo", "storage_modifier": "Optional", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Information about the registered parachains.", "module_id": "ProposeParachain", "module_prefix": "ParachainProposer", "module_name": "ProposeParachain", "spec_version": 202, "type_key1": "ParaId", "type_key2": null, "type_hasher_key1": "Twox64Concat", "type_hasher_key2": null, "type_value": "RegisteredParachainInfo<AccountId, ValidatorId>", "type_is_linked": false, "type_class": "MapType"}, {"storage_name": "ValidatorsToRetire", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Validators that should be retired, because their Parachain was deregistered.", "module_id": "ProposeParachain", "module_prefix": "ParachainProposer", "module_name": "ProposeParachain", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<ValidatorId>", "type_is_linked": null, "type_class": "PlainType"}, {"storage_name": "ValidatorsToAdd", "storage_modifier": "Default", "storage_fallback_scale": "0x00", "storage_fallback": null, "documentation": " Validators that should be added.", "module_id": "ProposeParachain", "module_prefix": "ParachainProposer", "module_name": "ProposeParachain", "spec_version": 202, "type_key1": null, "type_key2": null, "type_hasher_key1": null, "type_hasher_key2": null, "type_value": "Vec<ValidatorId>", "type_is_linked": null, "type_class": "PlainType"}]